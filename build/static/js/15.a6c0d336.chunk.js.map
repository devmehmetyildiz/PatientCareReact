{"version":3,"sources":["app/Components/Common/Forminput.js","app/Pages/Departments/Create.js"],"names":["Forminput","props","rowclass","rowvalue","itemrowspan","undefined","state","className","this","style","fontSize","itemname","Group","Control","id","itemid","value","itemvalue","type","itemtype","placeholder","itemplaceholder","onChange","itemchange","Component","Create","getData","a","GetAllStations","handlesubmit","e","preventDefault","postData","goBack","history","push","handleonchange","newdata","currentitem","target","setState","handleselect","stations","map","item","selected_stations","console","log","CreateDepartment","Id","Name","NormalizedName","ConcurrencyStamp","CreatedUser","UpdatedUser","DeleteUser","CreateTime","UpdateTime","DeleteTime","IsActive","isLoading","Departments","list","Stations","index","label","name","onSubmit","isMulti","options","onClick","minWidth","mapDispatchToProps","connect","withRouter"],"mappings":"0NAEqBA,E,YACjB,WAAYC,GAAQ,IAAD,sBAEf,IAAIC,EAAW,GACXC,GAFJ,4CAAMF,KAEcA,MAAMG,YAI1B,YAHiBC,IAAbF,IACAA,EAAW,KAEPA,GACJ,IAAK,IACDD,EAAQ,aACR,MACJ,IAAK,IACDA,EAAQ,cACR,MACJ,IAAK,IACDA,EAAQ,aACR,MACJ,IAAK,IACDA,EAAQ,aAlBD,OAyBf,EAAKI,MAAQ,CAAEJ,YAzBA,E,sEA4Bf,OACI,yBAAKK,UAAWC,KAAKF,MAAMJ,UACvB,yBAAKK,UAAU,OACX,2BAAOE,MAAO,CAAEC,SAAU,QAAUH,UAAU,kBAAkBC,KAAKP,MAAMU,WAE/E,kBAAC,IAAKC,MAAN,CAAYL,UAAU,OAClB,kBAAC,IAAKM,QAAN,CACIC,GAAIN,KAAKP,MAAMc,OACfC,MAAOR,KAAKP,MAAMgB,UAClBC,KAAMV,KAAKP,MAAMkB,SACjBC,YAAaZ,KAAKP,MAAMoB,gBACxBC,SAAUd,KAAKP,MAAMsB,mB,GAxCNC,c,k0BCQhC,IAAMC,EAAb,YAEI,WAAYxB,GAAQ,IAAD,uBACf,4CAAMA,KAuBVyB,QAxBmB,sBAwBT,sBAAAC,EAAA,sEACA,EAAK1B,MAAM2B,iBADX,2CAxBS,EA4BnBC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAKC,YA9BU,EAiCnBC,OAAS,SAACH,GACNA,EAAEC,iBACF,EAAK9B,MAAMiC,QAAQC,KAAK,iBAnCT,EAsCnBC,eAAiB,SAACN,GACd,IAAMO,EAAO,KAAQ,EAAK/B,MAAMgC,aAChCD,EAAQP,EAAES,OAAOzB,IAAMgB,EAAES,OAAOvB,MAChC,EAAKwB,SAAS,CAAEF,YAAaD,IAAW,gBAzCzB,EA8CnBI,aAAe,SAACX,GACZ,IAAMO,EAAO,KAAQ,EAAK/B,MAAMgC,aAChCD,EAAQK,SAAUZ,EAAEa,KAAI,SAACC,GACrB,OAAOA,EAAK5B,SAEhB,EAAKwB,SAAS,CAAEF,YAAYD,EAASQ,kBAAkBf,IAAK,WACxDgB,QAAQC,IAAI,sBAAuB,EAAKzC,MAAMuC,mBAC9CC,QAAQC,IAAI,gBAAiB,EAAKzC,MAAMgC,iBArD7B,EAyDnBN,SAzDmB,sBAyDR,sBAAAL,EAAA,sDACP,EAAK1B,MAAM+C,iBAAiB,EAAK1C,MAAMgC,YAAa,EAAKrC,MAAMiC,SADxD,2CAzDQ,OAiBf,EAAK5B,MAAQ,CAAEgC,YAfK,CAChBW,GAAI,EACJC,KAAM,GACNC,eAAgB,KAChBC,iBAAkB,KAClBC,YAAa,GACbC,YAAa,KACbC,WAAY,KACZC,WAAY,KACZC,WAAY,KACZC,WAAY,KACZC,UAAU,EACVjB,SAAU,IAGcG,kBADF,IAhBX,EAFvB,iFAuBQrC,KAAKkB,YAvBb,+BA+Dc,IACEkC,EAAcpD,KAAKP,MAAM4D,YAAzBD,UACFE,EAAOtD,KAAKP,MAAM8D,SAASD,KAAKnB,KAAI,SAACC,EAAMoB,GAC7C,MAAO,CAAEhD,MAAO4B,EAAMqB,MAAOrB,EAAKsB,SAEtC,OACI,oCACKN,EAAY,kBAAC,IAAD,MACT,yBAAKrD,UAAU,QACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,oBACA,0BAAMA,UAAU,cAAc4D,SAAU3D,KAAKqB,cACzC,yBAAKtB,UAAU,OACX,kBAAC,IAAD,CACIH,YAAY,IACZO,SAAS,qBACTI,OAAO,OACPE,UAAWT,KAAKF,MAAMgC,YAAYY,KAClC/B,SAAS,OACTE,gBAAgB,qBAChBE,WAAYf,KAAK4B,kBAGzB,yBAAK7B,UAAU,OACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CACIS,MAAOR,KAAKF,MAAMuC,kBAClBvB,SAAUd,KAAKiC,aACf2B,SAAS,EACTC,QAASP,MAIrB,yBAAKvD,UAAU,yDACX,4BAAQ+D,QAAS9D,KAAKyB,OAAQxB,MAAO,CAAE8D,SAAU,SAAWhE,UAAU,qBAAtE,eACA,4BAAQW,KAAK,SAAST,MAAO,CAAE8D,SAAU,SAAWhE,UAAU,wBAA9D,mBApG5C,GAA4BiB,aAsHtBgD,EAAqB,CAAExB,qBAAkBpB,oBAEhC6C,uBAPS,SAACnE,GAAD,MAAY,CAChCuD,YAAavD,EAAMuD,YACnBE,SAAUzD,EAAMyD,YAKoBS,EAAzBC,CAA6CC,YAAWjD","file":"static/js/15.a6c0d336.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nexport default class Forminput extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let rowclass = \"\"\r\n        let rowvalue = this.props.itemrowspan\r\n        if (rowvalue === undefined) {\r\n            rowvalue = \"1\"\r\n        }\r\n        switch (rowvalue) {\r\n            case \"1\":\r\n                rowclass = `pr-5 col-6`\r\n                break;\r\n            case \"2\":\r\n                rowclass = `pr-5 col-12`\r\n                break;\r\n            case \"3\":\r\n                rowclass = `pr-5 col-4`\r\n                break;\r\n            case \"4\":\r\n                rowclass = `pr-5 col-3`\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        this.state = { rowclass }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.state.rowclass}>\r\n                <div className='row'>\r\n                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">{this.props.itemname}</label>\r\n                </div>\r\n                <Form.Group className=\"row\" >\r\n                    <Form.Control\r\n                        id={this.props.itemid}\r\n                        value={this.props.itemvalue}\r\n                        type={this.props.itemtype}\r\n                        placeholder={this.props.itemplaceholder}\r\n                        onChange={this.props.itemchange} />\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport cogoToast from 'cogo-toast';\r\nimport InputItem from '../../Components/Common/Forminput'\r\nimport \"../../../assets/styles/Pages/Create.scss\"\r\nimport { CreateDepartment } from \"../../Redux/actions/DepartmentAction\"\r\nimport { GetAllStations } from \"../../Redux/actions/StationAction\"\r\nimport Spinner from '../../shared/Spinner'\r\nimport Select from 'react-select';\r\nexport class Create extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const currentitem = {\r\n            Id: 0,\r\n            Name: \"\",\r\n            NormalizedName: null,\r\n            ConcurrencyStamp: null,\r\n            CreatedUser: \"\",\r\n            UpdatedUser: null,\r\n            DeleteUser: null,\r\n            CreateTime: null,\r\n            UpdateTime: null,\r\n            DeleteTime: null,\r\n            IsActive: true,\r\n            stations: []\r\n        }\r\n        const selected_stations = []\r\n        this.state = { currentitem, selected_stations };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        await this.props.GetAllStations();\r\n    }\r\n\r\n    handlesubmit = (e) => {\r\n        e.preventDefault()\r\n        this.postData();\r\n    }\r\n\r\n    goBack = (e) => {\r\n        e.preventDefault()\r\n        this.props.history.push(\"/Departments\")\r\n    }\r\n\r\n    handleonchange = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata[e.target.id] = e.target.value\r\n        this.setState({ currentitem: newdata }, () => {\r\n        })\r\n\r\n    }\r\n\r\n    handleselect = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata.stations =e.map((item) => {\r\n            return item.value;\r\n        })\r\n        this.setState({ currentitem:newdata ,selected_stations:e }, () => {\r\n            console.log('selected_stations: ', this.state.selected_stations);\r\n            console.log('currentitem: ', this.state.currentitem);\r\n        })\r\n    }\r\n\r\n    postData = async () => {\r\n        this.props.CreateDepartment(this.state.currentitem, this.props.history)\r\n    };\r\n\r\n    render() {\r\n        const { isLoading } = this.props.Departments\r\n        const list = this.props.Stations.list.map((item, index) => {\r\n            return { value: item, label: item.name }\r\n        })\r\n        return (\r\n            <>\r\n                {isLoading ? <Spinner /> :\r\n                    <div className='Page'>\r\n                        <div className=\"col-12 grid-margin\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">Departman > Yeni</h4>\r\n                                    <form className=\"form-sample\" onSubmit={this.handlesubmit}>\r\n                                        <div className=\"row\">\r\n                                            <InputItem\r\n                                                itemrowspan=\"2\"\r\n                                                itemname=\"Departman Adı\"\r\n                                                itemid=\"Name\"\r\n                                                itemvalue={this.state.currentitem.Name}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Departman Adı\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='row'>\r\n                                            <div className='col-12 pr-5 mb-3'>\r\n                                                <Select\r\n                                                    value={this.state.selected_stations}\r\n                                                    onChange={this.handleselect}\r\n                                                    isMulti={true}\r\n                                                    options={list}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row d-flex pr-5 justify-content-end align-items-right'>\r\n                                            <button onClick={this.goBack} style={{ minWidth: '150px' }} className=\"btn btn-dark mr-2\">Geri Dön</button>\r\n                                            <button type=\"submit\" style={{ minWidth: '150px' }} className=\"btn btn-primary mr-2\">Ekle</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Departments: state.Departments,\r\n    Stations: state.Stations\r\n})\r\n\r\nconst mapDispatchToProps = { CreateDepartment, GetAllStations }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Create))"],"sourceRoot":""}