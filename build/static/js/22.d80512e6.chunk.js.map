{"version":3,"sources":["app/Pages/Departments/Delete.js","app/Pages/Departments/index.js"],"names":["Delete","DeleteHandle","a","props","DeleteDepartment","Departments","selected_department","GetAllDepartments","CloseDeleteModal","Modal","this","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","name","Footer","Button","onClick","Component","mapDispatchToProps","connect","state","withRouter","CustomToggleList","columns","onColumnToggle","toggles","console","log","className","data-toggle","map","column","toggle","dataField","type","key","aria-pressed","text","handleDeleteRole","e","row","GetSelectedDepartment","OpenDeleteModal","changecolumnvisiblebar","setState","columnvisiblebar","handleonaddnew","history","push","SearchBar","Search","sort","hidden","formatter","events","columnIndex","rowIndex","currentitem","defaultSorted","order","isLoading","list","show","isModalOpen","onHide","Spinner","style","minWidth","height","keyField","bootstrap4","data","search","columnToggle","columnToggleProps","searchProps","expandRow","pagination","paginationFactory","baseProps","wrapperClasses"],"mappings":"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","file":"static/js/22.d80512e6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Modal, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { GetAllDepartments, CloseDeleteModal, DeleteDepartment } from '../../Redux/actions/DepartmentAction'\r\n\r\nexport class Delete extends Component {\r\n\r\n    DeleteHandle = async () => {\r\n       await this.props.DeleteDepartment(this.props.Departments.selected_department)\r\n       await this.props.GetAllDepartments()\r\n       await this.props.CloseDeleteModal()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Departman Silme\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        {this.props.Departments.selected_department.name} departmanını silmek istediğinize Eminmisiniz?\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.props.CloseDeleteModal() }}>Vazgeç</Button>\r\n                    <Button onClick={() => { this.DeleteHandle() }}>Sil</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Departments: state.Departments,\r\n})\r\n\r\nconst mapDispatchToProps = { GetAllDepartments,  CloseDeleteModal, DeleteDepartment }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Delete))\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport { GetAllDepartments, GetSelectedDepartment, OpenDeleteModal, CloseDeleteModal } from '../../Redux/actions/DepartmentAction'\r\nimport { withRouter } from 'react-router-dom';\r\nimport Spinner from \"../../shared/Spinner\"\r\nimport DeleteModal from \"./Delete\"\r\n\r\n\r\nexport class Departments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        var currentitem = []\r\n        const isLoading = true\r\n        const columnvisiblebar = false\r\n        const { SearchBar } = Search;\r\n        const defaultSorted = [{\r\n            dataField: 'Id',\r\n            order: 'asc'\r\n        }]\r\n        const columns = [\r\n            {\r\n                dataField: 'id',\r\n                text: 'id',\r\n                sort: true,\r\n                type: 'number',\r\n                hidden: true\r\n            }, {\r\n                dataField: 'name',\r\n                text: 'Departman Adı',\r\n                sort: true\r\n            }, {\r\n                dataField: 'normalizedName',\r\n                text: 'Normalize İsim',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'concurrencyStamp',\r\n                text: 'Unik ID',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'createdUser',\r\n                text: 'Oluşturan Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'updatedUser',\r\n                text: 'Güncelleyen Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'deleteUser',\r\n                text: 'Silen Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'createTime',\r\n                text: 'Oluşturma Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'updateTime',\r\n                text: 'Güncelleme Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'deletetime',\r\n                text: 'Silme Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'stations',\r\n                text: 'İstasyonlar',\r\n                sort: false,\r\n                type: 'string'\r\n            }\r\n            , {\r\n                dataField: 'isActive',\r\n                text: 'Aktiflik Durumu',\r\n                sort: true,\r\n                type: 'bool',\r\n                hidden: true\r\n            }, {\r\n                dataField: 'update',\r\n                text: 'Güncelle',\r\n                sort: true,\r\n                formatter: () => {\r\n                    return (\r\n                        <div>\r\n                            <button className=\"btn btn-dark\">\r\n                                <i className=\"mdi mdi-tooltip-edit text-primary\"></i>Güncelle\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                },\r\n                events: {\r\n                    onClick: (e, column, columnIndex, row, rowIndex) => {\r\n                        this.props.history.push('/Departments/' + row.id)\r\n                    }\r\n                }\r\n            }\r\n            , {\r\n                dataField: 'delete',\r\n                text: 'Sil',\r\n                sort: true,\r\n                formatter: () => {\r\n                    return (\r\n                        <div>\r\n                            <button className=\"btn btn-dark\">\r\n                                <i className=\"mdi mdi-trash-can text-primary\"></i>Sil\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                },\r\n                events: {\r\n                    onClick: (e, column, columnIndex, row, rowIndex) => {\r\n                        this.handleDeleteRole(e, row)\r\n                    }\r\n                }\r\n            }\r\n\r\n        ];\r\n\r\n        this.state = { columnvisiblebar, currentitem, defaultSorted, columns, SearchBar, isLoading };\r\n    }\r\n\r\n    CustomToggleList = ({\r\n        columns,\r\n        onColumnToggle,\r\n        toggles\r\n    }) => (\r\n        console.log(toggles),\r\n        <div className=\"btn-group btn-group-toggle btn-group-vertical\" data-toggle=\"buttons\">\r\n            {\r\n                columns\r\n                    .map(column => ({\r\n                        ...column,\r\n                        toggle: toggles[column.dataField]\r\n                    }))\r\n                    .map(column => (\r\n                        <button\r\n                            type=\"button\"\r\n                            key={column.dataField}\r\n                            className={`m-1 btn btn-warning ${column.toggle ? 'active' : ''}`}\r\n                            data-toggle=\"button\"\r\n                            aria-pressed={column.toggle ? 'true' : 'false'}\r\n                            onClick={() => onColumnToggle(column.dataField)}\r\n                        >\r\n                            {column.text}\r\n                        </button>\r\n                    ))\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n    handleDeleteRole = async (e, row) => {\r\n        await this.props.GetSelectedDepartment(row.id)\r\n        this.props.OpenDeleteModal()\r\n    }\r\n\r\n    changecolumnvisiblebar = () => {\r\n        this.setState({ columnvisiblebar: !this.state.columnvisiblebar })\r\n    }\r\n\r\n    handleonaddnew = (e) => {\r\n        this.props.history.push(\"/Departments/Create\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.GetAllDepartments();\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, list } = this.props.Departments;\r\n        return (\r\n            <div>\r\n                <DeleteModal\r\n                    show={this.props.Departments.isModalOpen}\r\n                    onHide={() => this.props.CloseDeleteModal()}\r\n                />\r\n                {isLoading ? <Spinner /> :\r\n                    <div className=\"row datatable\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className='row'>\r\n                                        <div className='col-6 d-flex justify-content-start'>\r\n                                            <h4 className=\"card-title\">Departmanlar</h4>\r\n                                        </div>\r\n                                        <div className='col-6 d-flex justify-content-end'>\r\n                                            {/*   <button style={{ minWidth: '30px', height: '30px' }} onClick={() => { this.setState({ columnvisiblebar: !this.state.columnvisiblebar }) }}>Toggle</button> */}\r\n                                            <button style={{ minWidth: '120px', height: '30px' }} onClick={this.handleonaddnew} className=\"btn btn-primary mr-2\">Yeni Departman</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <ToolkitProvider\r\n                                                keyField=\"id\"\r\n                                                bootstrap4\r\n                                                data={list}\r\n                                                columns={this.state.columns}\r\n                                                search\r\n                                                columnToggle\r\n                                            >\r\n                                                {\r\n                                                    props => (\r\n                                                        <div>\r\n                                                            {this.state.columnvisiblebar ?\r\n                                                                <div>\r\n                                                                    <this.CustomToggleList {...props.columnToggleProps} />\r\n                                                                    <hr />\r\n                                                                </div>\r\n                                                                : <></>}\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <p className=\"mb-2 mr-2\">Arama Yap:</p>\r\n                                                                <this.state.SearchBar {...props.searchProps} />\r\n                                                            </div>\r\n                                                            <BootstrapTable\r\n                                                                expandRow={this.state.expandRow}\r\n                                                                defaultSorted={this.state.defaultSorted}\r\n                                                                pagination={paginationFactory()}\r\n                                                                {...props.baseProps}\r\n                                                                wrapperClasses=\"table-responsive\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </ToolkitProvider>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Departments: state.Departments\r\n})\r\n\r\nconst mapDispatchToProps = { GetAllDepartments, GetSelectedDepartment, OpenDeleteModal, CloseDeleteModal  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Departments))"],"sourceRoot":""}