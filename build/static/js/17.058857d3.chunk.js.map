{"version":3,"sources":["app/Components/Common/Forminput.js","app/Pages/Users/Create.js"],"names":["Forminput","props","rowclass","rowvalue","itemrowspan","undefined","state","className","this","style","fontSize","itemname","Group","Control","id","itemid","value","itemvalue","type","itemtype","placeholder","itemplaceholder","onChange","itemchange","Component","Create","getData","a","GetAllDepartments","GetAllRoles","GetAllStations","ClearfilteredStation","handlesubmit","e","preventDefault","postData","goBack","history","push","handleonchange","newdata","currentitem","target","setState","handleselectstation","stations","map","item","Stations","list","find","station","concurrencyStamp","selected_stations","handleselectdepartments","departments","Departments","department","GetStationByDepartments","selected_departments","handleselectroles","roles","Roles","role","selected_roles","handleselectLanguage","language","createdUser","name","normalizedName","updatedUser","deleteUser","createTime","updateTime","deleteTime","isActive","username","passwordHash","email","emailConfirmed","phoneNumber","phoneNumberConfirmed","accessFailedCount","town","address","city","userID","label","isLoading","Users","index","filtered_stations","onSubmit","surname","margin","isMulti","options","handleselect","onClick","minWidth","mapDispatchToProps","CreateUser","GetStationsByUser","connect","withRouter"],"mappings":"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","file":"static/js/17.058857d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nexport default class Forminput extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let rowclass = \"\"\r\n        let rowvalue = this.props.itemrowspan\r\n        if (rowvalue === undefined) {\r\n            rowvalue = \"1\"\r\n        }\r\n        switch (rowvalue) {\r\n            case \"1\":\r\n                rowclass = `pr-5 col-6`\r\n                break;\r\n            case \"2\":\r\n                rowclass = `pr-5 col-12`\r\n                break;\r\n            case \"3\":\r\n                rowclass = `pr-5 col-4`\r\n                break;\r\n            case \"4\":\r\n                rowclass = `pr-5 col-3`\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        this.state = { rowclass }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.state.rowclass}>\r\n                <div className='row'>\r\n                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">{this.props.itemname}</label>\r\n                </div>\r\n                <Form.Group className=\"row\" >\r\n                    <Form.Control\r\n                        id={this.props.itemid}\r\n                        value={this.props.itemvalue}\r\n                        type={this.props.itemtype}\r\n                        placeholder={this.props.itemplaceholder}\r\n                        onChange={this.props.itemchange} />\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport cogoToast from 'cogo-toast';\r\nimport InputItem from '../../Components/Common/Forminput'\r\nimport \"../../../assets/styles/Pages/Create.scss\"\r\nimport { CreateUser } from \"../../Redux/actions/UserAction\"\r\nimport { GetStationByDepartments, GetStationsByUser, ClearfilteredStation, GetAllStations } from \"../../Redux/actions/StationAction\"\r\nimport { GetAllRoles } from \"../../Redux/actions/RoleActions\"\r\nimport { GetAllDepartments } from \"../../Redux/actions/DepartmentAction\"\r\nimport Spinner from '../../shared/Spinner'\r\nimport Select from 'react-select';\r\nimport { Form } from 'react-bootstrap'\r\nexport class Create extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const currentitem = {\r\n            id: 0,\r\n            name: \"\",\r\n            normalizedName: null,\r\n            concurrencyStamp: null,\r\n            createdUser: \"\",\r\n            updatedUser: null,\r\n            deleteUser: null,\r\n            createTime: null,\r\n            updateTime: null,\r\n            deleteTime: null,\r\n            isActive: true,\r\n            username: \"\",\r\n            passwordHash: \"\",\r\n            email: \"\",\r\n            emailConfirmed: false,\r\n            phoneNumber: \"\",\r\n            phoneNumberConfirmed: false,\r\n            accessFailedCount: 0,\r\n            town: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            language: \"\",\r\n            userID: 0,\r\n            stations: [],\r\n            roles: [],\r\n            departments: []\r\n        }\r\n        const language = [\r\n            { label: 'TR', value: 'TR' },\r\n            { label: 'EN', value: 'EN' }\r\n        ]\r\n        const { selected_stations, selected_departments, selected_roles } = []\r\n        this.state = { currentitem, selected_departments, selected_stations, selected_roles, language };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        await this.props.GetAllDepartments();\r\n        await this.props.GetAllRoles();\r\n        await this.props.GetAllStations();\r\n        await this.props.ClearfilteredStation();\r\n    }\r\n\r\n    handlesubmit = (e) => {\r\n        e.preventDefault()\r\n        this.postData();\r\n    }\r\n\r\n    goBack = (e) => {\r\n        e.preventDefault()\r\n        this.props.history.push(\"/Users\")\r\n    }\r\n\r\n    handleonchange = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata[e.target.id] = e.target.value\r\n        this.setState({ currentitem: newdata }, () => {\r\n        })\r\n\r\n    }\r\n\r\n    handleselectstation = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata.stations = (e || []).map((item) => {\r\n            return this.props.Stations.list.find(station => station.concurrencyStamp === item.value);\r\n        })\r\n        this.setState({ currentitem: newdata, selected_stations: e }, () => {\r\n        })\r\n    }\r\n\r\n    handleselectdepartments = (e) => {\r\n        let stations = this.state.selected_stations\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata.departments = (e || []).map((item) => {\r\n            return this.props.Departments.list.find(department => department.concurrencyStamp === item.value);\r\n        })\r\n        const departments = (e || []).map((item) => {\r\n            return item.value\r\n        })\r\n        if (e === null) {\r\n            this.props.ClearfilteredStation()\r\n            newdata.stations = []\r\n            stations = []\r\n        } else {\r\n            this.props.GetStationByDepartments(departments); \r\n            stations = []           \r\n        }\r\n        this.setState({ currentitem: newdata, selected_departments: e, selected_stations: stations }, () => {\r\n        })\r\n    }\r\n\r\n    handleselectroles = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata.roles = e.map((item) => {\r\n            return this.props.Roles.list.find(role => role.concurrencyStamp === item.value);\r\n        })\r\n        this.setState({ currentitem: newdata, selected_roles: e }, () => {\r\n        })\r\n    }\r\n\r\n    handleselectLanguage = (e) => {\r\n        const newdata = { ...this.state.currentitem }\r\n        newdata.language = e.value\r\n        this.setState({ currentitem: newdata }, () => {\r\n        })\r\n    }\r\n\r\n    postData = async () => {\r\n        this.props.createdUser(this.state.currentitem, this.props.history)\r\n    };\r\n\r\n    render() {\r\n        const { isLoading } = this.props.Users\r\n        const Departments = this.props.Departments.list.map((item, index) => {\r\n            return { value: item.concurrencyStamp, label: item.name }\r\n        })\r\n        const Stations = this.props.Stations.filtered_stations.map((item, index) => {\r\n            return { value: item.concurrencyStamp, label: item.name }\r\n        })\r\n        const Roles = this.props.Roles.list.map((item, index) => {\r\n            return { value: item.concurrencyStamp, label: item.name }\r\n        })\r\n\r\n        return (\r\n            <>\r\n                {isLoading ? <Spinner /> :\r\n                    <div className='Page'>\r\n                        <div className=\"col-12 grid-margin\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">Kullanıcılar > Yeni</h4>\r\n                                    <form className=\"form-sample\" onSubmit={this.handlesubmit}>\r\n                                        <div className=\"row\">\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Kullanıcı Adı\"\r\n                                                itemid=\"username\"\r\n                                                itemvalue={this.state.currentitem.username}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Kullanıcı Adı\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"İsim\"\r\n                                                itemid=\"name\"\r\n                                                itemvalue={this.state.currentitem.name}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"İsim\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Soyisim\"\r\n                                                itemid=\"surname\"\r\n                                                itemvalue={this.state.currentitem.surname}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Soyisim\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"E-Posta\"\r\n                                                itemid=\"email\"\r\n                                                itemvalue={this.state.currentitem.email}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"E-Posta\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='row'>\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Telefon\"\r\n                                                itemid=\"phonenumber\"\r\n                                                itemvalue={this.state.currentitem.phoneNumber}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Telefon\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Şehir\"\r\n                                                itemid=\"city\"\r\n                                                itemvalue={this.state.currentitem.city}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Şehir\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"İlçe\"\r\n                                                itemid=\"town\"\r\n                                                itemvalue={this.state.currentitem.town}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"İlçe\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Adres\"\r\n                                                itemid=\"address\"\r\n                                                itemvalue={this.state.currentitem.address}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Adres\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='row'>\r\n                                            <div className=\"pr-5 col-6\">\r\n                                                <div className='row'>\r\n                                                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">Departmanlar</label>\r\n                                                </div>\r\n                                                <Form.Group className=\"row\" >\r\n                                                    <div style={{ margin: '0 0 0 -10px' }} className='col-12'>\r\n                                                        <Select\r\n                                                            value={this.state.selected_departments}\r\n                                                            onChange={this.handleselectdepartments}\r\n                                                            isMulti={true}\r\n                                                            options={Departments}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"pr-5 col-6\">\r\n                                                <div className='row'>\r\n                                                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">İstasyonlar</label>\r\n                                                </div>\r\n                                                <Form.Group className=\"row\" >\r\n                                                    <div style={{ margin: '0 0 0 -10px' }} className='col-12'>\r\n                                                        <Select\r\n                                                            value={this.state.selected_stations}\r\n                                                            onChange={this.handleselectstation}\r\n                                                            isMulti={true}\r\n                                                            options={Stations}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row'>\r\n                                            <div className=\"pr-5 col-6\">\r\n                                                <div className='row'>\r\n                                                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">Roller</label>\r\n                                                </div>\r\n                                                <Form.Group className=\"row\" >\r\n                                                    <div style={{ margin: '0 0 0 -10px' }} className='col-12'>\r\n                                                        <Select\r\n                                                            value={this.state.selected_roles}\r\n                                                            onChange={this.handleselectroles}\r\n                                                            isMulti={true}\r\n                                                            options={Roles}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"pr-5 col-3\">\r\n                                                <div className='row'>\r\n                                                    <label style={{ fontSize: \"12px\" }} className=\"col-form-label\">Uygulama Dili</label>\r\n                                                </div>\r\n                                                <Form.Group className=\"row\" >\r\n                                                    <div style={{ margin: '0 0 0 -10px' }} className='col-12'>\r\n                                                        <Select\r\n                                                            value={this.state.currentitem}\r\n                                                            onChange={this.handleselect}\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <InputItem\r\n                                                itemrowspan=\"4\"\r\n                                                itemname=\"Kullanıcı Numarası\"\r\n                                                itemid=\"userID\"\r\n                                                itemvalue={this.state.currentitem.userID}\r\n                                                itemtype=\"text\"\r\n                                                itemplaceholder=\"Kullanıcı Numarası\"\r\n                                                itemchange={this.handleonchange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='row d-flex pr-5 justify-content-end align-items-right'>\r\n                                            <button onClick={this.goBack} style={{ minWidth: '150px' }} className=\"btn btn-dark mr-2\">Geri Dön</button>\r\n                                            <button type=\"submit\" style={{ minWidth: '150px' }} className=\"btn btn-primary mr-2\">Ekle</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Users: state.Users,\r\n    Stations: state.Stations,\r\n    Roles: state.Roles,\r\n    Departments: state.Departments\r\n})\r\n\r\nconst mapDispatchToProps = { CreateUser, GetAllRoles, GetStationByDepartments, GetStationsByUser, GetAllDepartments, ClearfilteredStation, GetAllStations }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Create))"],"sourceRoot":""}