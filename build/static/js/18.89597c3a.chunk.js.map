{"version":3,"sources":["app/Components/Common/ToggleColumns.js","app/Pages/Cases/Delete.js","app/Pages/Cases/index.js"],"names":["Component","Delete","Modal","this","props","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Cases","selected_case","name","Footer","Button","onClick","CloseDeleteModal","DeleteCase","mapDispatchToProps","GetAllCases","GetSelectedCase","connect","state","withRouter","CustomToggleList","columns","onColumnToggle","toggles","className","map","column","toggle","dataField","index","Form","Check","type","key","inline","label","text","checked","aria-checked","onChange","handleonaddnew","e","history","push","handleDeleteCase","row","OpenDeleteModal","getData","a","console","log","sort","hidden","formatter","events","columnIndex","rowIndex","columnvisiblebar","defaultSorted","order","modalShow","SearchBar","Search","Data","list","Columns","show","isModalOpen","onHide","isLoading","Spinner","style","minWidth","height","keyField","bootstrap4","data","search","columnToggle","columnToggleProps","searchProps","pagination","paginationFactory","baseProps","wrapperClasses"],"mappings":"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","file":"static/js/18.89597c3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\n\r\nexport class ToggleColumns extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"parametername\">\r\n                                        <Form.Label>Case Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"parametername\" required\r\n                                            placeholder=\"parametername\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer >\r\n                        <Button variant=\"primary\" type=\"submit\">  Add Case </Button>\r\n\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Modal, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { GetAllCases, GetSelectedCase, CloseDeleteModal, DeleteCase } from '../../Redux/actions/CaseActions'\r\n\r\nexport class Delete extends Component {\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Durum Silme\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        {this.props.Cases.selected_case.name} durumunu silmek istediğinize Eminmisiniz?\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => { this.props.CloseDeleteModal() }}>Vazgeç</Button>\r\n                    <Button onClick={() => { this.props.DeleteCase(this.props.Cases.selected_case) }}>Sil</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Cases: state.Cases,\r\n})\r\n\r\nconst mapDispatchToProps = { GetAllCases, GetSelectedCase, CloseDeleteModal, DeleteCase }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Delete))\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ToggleColumns from \"../../Components/Common/ToggleColumns\"\r\nimport { GetAllCases, GetSelectedCase, OpenDeleteModal, CloseDeleteModal } from '../../Redux/actions/CaseActions'\r\nimport Spinner from '../../shared/Spinner'\r\nimport DeleteCaseModal from \"./Delete\"\r\nimport { Form } from \"react-bootstrap\";\r\nexport class Cases extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const modalShow = false;\r\n        const columnvisiblebar = false\r\n        const defaultSorted = [{\r\n            dataField: 'Id',\r\n            order: 'asc'\r\n        }]\r\n        const columns = [\r\n            {\r\n                dataField: 'id',\r\n                text: 'id',\r\n                sort: true,\r\n                type: 'number',\r\n                hidden: true\r\n            }, {\r\n                dataField: 'caseGroup',\r\n                text: 'Durum Grubu',\r\n                sort: true\r\n            }, {\r\n                dataField: 'caseStatus',\r\n                text: 'Durum Değeri',\r\n                sort: true\r\n            }, {\r\n                dataField: 'name',\r\n                text: 'İsim',\r\n                sort: true\r\n            }, {\r\n                dataField: 'normalizedName',\r\n                text: 'Normalize İsim',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'concurrencyStamp',\r\n                text: 'Unik ID',\r\n                sort: true\r\n            }, {\r\n                dataField: 'createdUser',\r\n                text: 'Oluşturan Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'updatedUser',\r\n                text: 'Güncelleyen Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            }, {\r\n                dataField: 'deleteUser',\r\n                text: 'Silen Kullanıcı',\r\n                sort: true,\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'createTime',\r\n                text: 'Oluşturma Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'updateTime',\r\n                text: 'Güncelleme Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'deletetime',\r\n                text: 'Silme Tarihi',\r\n                sort: true,\r\n                type: 'date',\r\n                hidden: true\r\n            },\r\n            , {\r\n                dataField: 'isActive',\r\n                text: 'Aktiflik Durumu',\r\n                sort: true,\r\n                type: 'bool'\r\n            }, {\r\n                dataField: 'update',\r\n                text: 'Güncelle',\r\n                sort: true,\r\n                formatter: () => {\r\n                    return (\r\n                        <div>\r\n                            <button className=\"btn btn-dark\">\r\n                                <i className=\"mdi mdi-tooltip-edit text-primary\"></i>Güncelle\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                },\r\n                events: {\r\n                    onClick: (e, column, columnIndex, row, rowIndex) => {\r\n                        this.props.history.push('/Cases/' + row.id)\r\n                    }\r\n                }\r\n            }\r\n            , {\r\n                dataField: 'delete',\r\n                text: 'Sil',\r\n                sort: true,\r\n                formatter: () => {\r\n                    return (\r\n                        <div>\r\n                            <button className=\"btn btn-dark\">\r\n                                <i className=\"mdi mdi-trash-can text-primary\"></i>Sil\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                },\r\n                events: {\r\n                    onClick: (e, column, columnIndex, row, rowIndex) => {\r\n                        this.handleDeleteCase(e, row)\r\n                    }\r\n                }\r\n            }\r\n\r\n        ];\r\n        this.state = { columnvisiblebar, defaultSorted, columns, modalShow };\r\n\r\n    }\r\n\r\n\r\n\r\n    CustomToggleList = ({\r\n        columns,\r\n        onColumnToggle,\r\n        toggles\r\n    }) => (\r\n        <div className=\"text-center\">\r\n            {columns\r\n                .map(column => ({\r\n                    ...column,\r\n                    toggle: toggles[column.dataField]\r\n                }))\r\n                .map((column, index) => (\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        key={column.dataField}\r\n                        inline\r\n                        label={column.text}\r\n                        id={column.dataField}\r\n                        //aria-pressed={(column.toggle) ? \"true\" : \"false\"}\r\n                        checked={column.toggle}\r\n                        aria-checked={column.toggle ? \"true\" : \"false\"}\r\n                        onChange={() => onColumnToggle(column.dataField)}\r\n                    //onClick={() => onColumnToggle(column.dataField)}\r\n                    />\r\n                ))}\r\n        </div>\r\n    );\r\n\r\n    handleonaddnew = (e) => {\r\n        this.props.history.push(\"/Cases/Create\")\r\n    }\r\n\r\n    handleDeleteCase = (e, row) => {\r\n        this.props.GetSelectedCase(row.id)\r\n        this.props.OpenDeleteModal()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        console.log(\"index basladı\")\r\n        await this.props.GetAllCases();\r\n        console.log(\"index bitti\")\r\n    };\r\n\r\n\r\n    render() {\r\n        const { SearchBar } = Search;\r\n        const Data = this.props.Cases.list\r\n        const Columns = this.state.columns\r\n        return (\r\n            <div>\r\n                <DeleteCaseModal\r\n                    show={this.props.Cases.isModalOpen}\r\n                    onHide={() => this.props.CloseDeleteModal()}\r\n                />\r\n                {this.props.Cases.isLoading ? <Spinner /> :\r\n                    <div className=\"row datatable\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className='row'>\r\n                                        <div className='col-6 d-flex justify-content-start'>\r\n                                            <h4 className=\"card-title\">Durumlar</h4>\r\n                                        </div>\r\n                                        <div className='col-6 d-flex justify-content-end'>\r\n                                           {/*  <button style={{ minWidth: '30px', height: '30px' }} onClick={() => { this.setState({ columnvisiblebar: !this.state.columnvisiblebar }) }}>Toggle</button> */}\r\n                                            <button style={{ minWidth: '120px', height: '30px' }} onClick={this.handleonaddnew} className=\"btn btn-primary mr-2\">Yeni Durum</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <ToolkitProvider\r\n                                                keyField=\"id\"\r\n                                                bootstrap4\r\n                                                data={Data}\r\n                                                columns={Columns}\r\n                                                search\r\n                                                columnToggle\r\n                                            >\r\n                                                {\r\n                                                    props => (\r\n                                                        <div>\r\n                                                            {this.state.columnvisiblebar ?\r\n                                                                <div>\r\n                                                                    <this.CustomToggleList {...props.columnToggleProps} />\r\n                                                                    <hr />\r\n                                                                </div>\r\n                                                                : <></>}\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <p className=\"mb-2 mr-2\">Arama Yap:</p>\r\n                                                                <SearchBar {...props.searchProps} />\r\n                                                            </div>\r\n                                                            <BootstrapTable\r\n                                                                defaultSorted={this.state.defaultSorted}\r\n                                                                pagination={paginationFactory()}\r\n                                                                {...props.baseProps}\r\n                                                                wrapperClasses=\"table-responsive\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </ToolkitProvider>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Cases: state.Cases,\r\n})\r\n\r\nconst mapDispatchToProps = { GetAllCases, GetSelectedCase, OpenDeleteModal, CloseDeleteModal }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Cases))\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}